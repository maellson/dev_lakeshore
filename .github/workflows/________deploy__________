name: 🚀 Deploy to AWS Production

on:
  push:
    branches: [main]
  workflow_dispatch:  # Permite execução manual

env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: 460044121130.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPOSITORY: erp-lakeshore
  ECS_CLUSTER: erp-lakeshore
  ECS_SERVICE: erp-lakeshore-service

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🧪 Run tests
      run: |
        python manage.py test
        
    - name: 🔍 Run linting
      run: |
        pip install flake8 black
        flake8 . --max-line-length=120
        black --check .

  deploy:
    name: 🚀 Deploy to AWS
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🔧 Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: 🔐 Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: 🏗️ Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build da imagem
        docker build --platform linux/amd64 -f docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build --platform linux/amd64 -f docker/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        
        # Push das imagens
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        # Output para próximos steps
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
    
    - name: 🚢 Deploy to Amazon ECS
      run: |
        # Força novo deployment
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment \
          --region $AWS_REGION
    
    - name: 📋 Wait for deployment to complete
      run: |
        aws ecs wait services-stable \
          --cluster $ECS_CLUSTER \
          --services $ECS_SERVICE \
          --region $AWS_REGION
    
    - name: ✅ Deployment successful
      run: |
        echo "🎉 Deploy realizado com sucesso!"
        echo "📋 Para ver logs: aws logs tail /ecs/erp-lakeshore --follow --region $AWS_REGION"
# Generated by Django 5.1.4 on 2025-07-13 21:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CondicaoPagamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "prazo_dias",
                    models.PositiveIntegerField(
                        default=30, help_text="Prazo em dias para pagamento"
                    ),
                ),
                (
                    "desconto_percentual",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Desconto para pagamento antecipado (%)",
                        max_digits=5,
                    ),
                ),
            ],
            options={
                "verbose_name": "Condição de Pagamento",
                "verbose_name_plural": "Condições de Pagamento",
                "db_table": "account_condicao_pagamento",
            },
        ),
        migrations.CreateModel(
            name="FonteClient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Fonte do Cliente",
                "verbose_name_plural": "Fontes dos Clientes",
                "db_table": "account_fonte_cliente",
            },
        ),
        migrations.CreateModel(
            name="FrequenciaAtualizacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("dias", models.PositiveIntegerField(help_text="Intervalo em dias")),
            ],
            options={
                "verbose_name": "Frequência de Atualização",
                "verbose_name_plural": "Frequências de Atualização",
                "db_table": "account_frequencia_atualizacao",
            },
        ),
        migrations.CreateModel(
            name="Idioma",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "locale_code",
                    models.CharField(
                        help_text="Código de localização (pt-BR, en-US, es-ES)",
                        max_length=10,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Idioma",
                "verbose_name_plural": "Idiomas",
                "db_table": "account_idioma",
            },
        ),
        migrations.CreateModel(
            name="MetodoContato",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Método de Contato",
                "verbose_name_plural": "Métodos de Contato",
                "db_table": "account_metodo_contato",
            },
        ),
        migrations.CreateModel(
            name="NivelAcesso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "nivel",
                    models.PositiveIntegerField(
                        help_text="Nível hierárquico (1-5)", unique=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Nível de Acesso",
                "verbose_name_plural": "Níveis de Acesso",
                "db_table": "account_nivel_acesso",
                "ordering": ["nivel"],
            },
        ),
        migrations.CreateModel(
            name="TipoUsuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tipo de Usuário",
                "verbose_name_plural": "Tipos de Usuários",
                "db_table": "account_tipo_usuario",
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True,
                        help_text="Complete address of the user",
                        verbose_name="address",
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="Phone"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Last Updated"),
                ),
                ("ultimo_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "preferencia_idioma",
                    models.ForeignKey(
                        help_text="Idioma de preferência do usuário",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.idioma",
                        verbose_name="Idioma Preferido",
                    ),
                ),
                (
                    "tipo_usuario",
                    models.ForeignKey(
                        help_text="Tipo do usuário no sistema",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.tipousuario",
                        verbose_name="Tipo de Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuário",
                "verbose_name_plural": "Usuários",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Departamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "responsavel",
                    models.ForeignKey(
                        blank=True,
                        help_text="Responsável pelo departamento",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="departamentos_responsavel",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Departamento",
                "verbose_name_plural": "Departamentos",
                "db_table": "account_departamento",
            },
        ),
        migrations.CreateModel(
            name="EmailVerificationToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_used", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Token Email Verification",
                "verbose_name_plural": "Tokens Email Verification",
            },
        ),
        migrations.CreateModel(
            name="Cargo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for system reference",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for users",
                        max_length=100,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon code or emoji",
                        max_length=50,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code (#000000)",
                        max_length=7,
                        verbose_name="Color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Display order (lower first)",
                        verbose_name="Display Order",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this option is active",
                        verbose_name="Is Active",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "nivel_acesso",
                    models.ForeignKey(
                        help_text="Nível de acesso associado a este cargo",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.nivelacesso",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cargo",
                "verbose_name_plural": "Cargos",
                "db_table": "account_cargo",
            },
        ),
        migrations.CreateModel(
            name="PasswordResetToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_used", models.BooleanField(default=False)),
                ("expires_at", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Token Reset Senha",
                "verbose_name_plural": "Tokens Reset Senha",
            },
        ),
        migrations.CreateModel(
            name="PerfilClient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "main_address",
                    models.TextField(
                        help_text="Main address of the client",
                        verbose_name="Main Address",
                    ),
                ),
                (
                    "notas_importantes",
                    models.TextField(blank=True, verbose_name="Notas Importantes"),
                ),
                (
                    "fonte_client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="account.fonteclient",
                        verbose_name="Como nos conheceu",
                    ),
                ),
                (
                    "frequencia_atualizacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.frequenciaatualizacao",
                        verbose_name="Frequência de Atualização",
                    ),
                ),
                (
                    "metodo_contato_preferido",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.metodocontato",
                        verbose_name="Método de Contato Preferido",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="perfil_client",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil Client",
                "verbose_name_plural": "Perfis Clients",
            },
        ),
        migrations.CreateModel(
            name="PerfilFornecedor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empresa", models.CharField(max_length=200, verbose_name="Empresa")),
                (
                    "cnpj",
                    models.CharField(max_length=18, unique=True, verbose_name="CNPJ"),
                ),
                (
                    "prazo_medio_entrega",
                    models.IntegerField(
                        default=7,
                        help_text="Dias para entrega",
                        verbose_name="Prazo Médio Entrega (dias)",
                    ),
                ),
                (
                    "condicoes_pagamento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.condicaopagamento",
                        verbose_name="Condições de Pagamento",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="perfil_fornecedor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil Fornecedor",
                "verbose_name_plural": "Perfis Fornecedores",
            },
        ),
        migrations.CreateModel(
            name="PerfilInterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cargo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.cargo",
                        verbose_name="Cargo",
                    ),
                ),
                (
                    "departamento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.departamento",
                        verbose_name="Departamento",
                    ),
                ),
                (
                    "nivel_acesso",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="account.nivelacesso",
                        verbose_name="Nível de Acesso",
                    ),
                ),
                (
                    "permissoes_especiais",
                    models.ManyToManyField(
                        blank=True,
                        to="auth.permission",
                        verbose_name="Permissões Especiais",
                    ),
                ),
                (
                    "responsavel_direto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="account.perfilinterno",
                        verbose_name="Responsável Direto",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="perfil_interno",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil Interno",
                "verbose_name_plural": "Perfis Internos",
            },
        ),
        migrations.CreateModel(
            name="PerfilSubcontratado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empresa", models.CharField(max_length=200, verbose_name="Empresa")),
                (
                    "cnpj",
                    models.CharField(max_length=18, unique=True, verbose_name="CNPJ"),
                ),
                (
                    "classificacao",
                    models.FloatField(
                        default=0.0,
                        help_text="Rating de 0 a 5",
                        verbose_name="Classificação",
                    ),
                ),
                ("data_ultimo_servico", models.DateField(blank=True, null=True)),
                (
                    "documentos_verificados",
                    models.BooleanField(
                        default=False, verbose_name="Documentos Verificados"
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="perfil_subcontratado",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil Subcontratado",
                "verbose_name_plural": "Perfis Subcontratados",
            },
        ),
    ]

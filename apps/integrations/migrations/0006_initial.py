# Generated by Django 5.0.1 on 2025-08-11 23:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("integrations", "0005_auto_20250811_2317"),
    ]

    operations = [
        migrations.CreateModel(
            name="BrokermintActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brokermint_id", models.BigIntegerField(unique=True)),
                ("content", models.TextField()),
                ("bm_transaction_id", models.BigIntegerField()),
                ("created_at_brokermint", models.BigIntegerField()),
                ("originator_id", models.BigIntegerField()),
                ("document_id", models.BigIntegerField()),
                ("event_label", models.CharField(max_length=100)),
                ("signers", models.JSONField(default=list)),
                ("synced_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="BrokermintDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brokermint_id", models.BigIntegerField(unique=True)),
                ("name", models.CharField(max_length=200)),
                ("bm_transaction_id", models.BigIntegerField()),
                ("task_id", models.BigIntegerField(null=True)),
                ("pages", models.IntegerField()),
                ("content_type", models.CharField(max_length=100)),
                ("url", models.URLField()),
                ("synced_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="BrokermintTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "brokermint_id",
                    models.BigIntegerField(unique=True, verbose_name="ID Brokermint"),
                ),
                ("address", models.CharField(max_length=200, verbose_name="Endereço")),
                ("city", models.CharField(max_length=100, verbose_name="Cidade")),
                ("state", models.CharField(max_length=10, verbose_name="Estado")),
                ("zip", models.CharField(max_length=20, verbose_name="CEP")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Preço"
                    ),
                ),
                ("status", models.CharField(max_length=50, verbose_name="Status")),
                (
                    "representing",
                    models.CharField(max_length=50, verbose_name="Representando"),
                ),
                (
                    "transaction_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "county",
                    models.CharField(blank=True, max_length=100, verbose_name="County"),
                ),
                (
                    "legal_description",
                    models.TextField(blank=True, verbose_name="Descrição Legal"),
                ),
                (
                    "parcel_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Parcel ID"
                    ),
                ),
                (
                    "home_model",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Modelo Casa"
                    ),
                ),
                (
                    "bedrooms",
                    models.CharField(blank=True, max_length=10, verbose_name="Quartos"),
                ),
                (
                    "full_baths",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="Banheiros"
                    ),
                ),
                (
                    "half_baths",
                    models.CharField(blank=True, max_length=10, verbose_name="Lavabos"),
                ),
                (
                    "building_sqft",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="SQFT Construção"
                    ),
                ),
                (
                    "soft_costs",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Soft Costs"
                    ),
                ),
                (
                    "hard_costs",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Hard Costs"
                    ),
                ),
                (
                    "estimated_construction_cost",
                    models.CharField(blank=True, max_length=20),
                ),
                (
                    "builder_fee",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Taxa Builder"
                    ),
                ),
                (
                    "draw_1",
                    models.CharField(blank=True, max_length=20, verbose_name="Draw 1"),
                ),
                (
                    "draw_2",
                    models.CharField(blank=True, max_length=20, verbose_name="Draw 2"),
                ),
                (
                    "draw_3",
                    models.CharField(blank=True, max_length=20, verbose_name="Draw 3"),
                ),
                (
                    "draw_4",
                    models.CharField(blank=True, max_length=20, verbose_name="Draw 4"),
                ),
                (
                    "draw_5",
                    models.CharField(blank=True, max_length=20, verbose_name="Draw 5"),
                ),
                (
                    "lot",
                    models.CharField(blank=True, max_length=20, verbose_name="Lote"),
                ),
                (
                    "block",
                    models.CharField(blank=True, max_length=20, verbose_name="Quadra"),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=20, verbose_name="Unidade"),
                ),
                (
                    "sec",
                    models.CharField(blank=True, max_length=20, verbose_name="SEC"),
                ),
                (
                    "twp",
                    models.CharField(blank=True, max_length=20, verbose_name="TWP"),
                ),
                (
                    "rge",
                    models.CharField(blank=True, max_length=20, verbose_name="RGE"),
                ),
                (
                    "subdivision",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Subdivisão"
                    ),
                ),
                (
                    "acceptance_date",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="Data Aceitação"
                    ),
                ),
                (
                    "expiration_date",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="Data Expiração"
                    ),
                ),
                (
                    "closing_date",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="Data Fechamento"
                    ),
                ),
                (
                    "listing_date",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="Data Listagem"
                    ),
                ),
                ("buyer_agreement_date", models.BigIntegerField(blank=True, null=True)),
                (
                    "buyer_expiration_date",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "custom_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID Customizado"
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Tipo Transação"
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID Externo"
                    ),
                ),
                (
                    "total_gross_commission",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "sales_volume",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "has_detailed_data",
                    models.BooleanField(
                        default=False, verbose_name="Dados Detalhados Carregados"
                    ),
                ),
                ("last_synced", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Transação Brokermint",
                "indexes": [
                    models.Index(
                        fields=["brokermint_id"], name="integration_brokerm_751175_idx"
                    ),
                    models.Index(
                        fields=["parcel_id"], name="integration_parcel__b477fb_idx"
                    ),
                    models.Index(
                        fields=["custom_id"], name="integration_custom__7262b6_idx"
                    ),
                    models.Index(
                        fields=["status"], name="integration_status_e17727_idx"
                    ),
                ],
            },
        ),
    ]

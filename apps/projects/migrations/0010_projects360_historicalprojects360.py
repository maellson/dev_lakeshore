# Generated by Django 5.1.4 on 2025-08-03 04:26

import django.core.validators
import django.db.models.deletion
import projects.models.project
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0009_managementcompany"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Projects360",
            fields=[],
            options={
                "verbose_name": "Projects 360° View",
                "verbose_name_plural": "Projects 360° Views",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("projects.project",),
        ),
        migrations.CreateModel(
            name="HistoricalProjects360",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "project_name",
                    models.CharField(
                        help_text="Descriptive name of the project",
                        max_length=200,
                        verbose_name="Project Name",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="address of the project", verbose_name="address"
                    ),
                ),
                (
                    "area_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.01"),
                        help_text="Área total do lote/terreno/unidade",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Área Total (m²)",
                    ),
                ),
                (
                    "construction_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Real construction cost of the project",
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Construction Cost",
                    ),
                ),
                (
                    "sale_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total sale value of the contract",
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Sale Value",
                    ),
                ),
                (
                    "project_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Real cost of the project",
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Project Value",
                    ),
                ),
                (
                    "roi",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Return on Investment percentage",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="ROI (%)",
                    ),
                ),
                (
                    "completion_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Percentage of completion of the project",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                        verbose_name="Completion Percentage (%)",
                    ),
                ),
                (
                    "observations",
                    models.TextField(
                        blank=True,
                        help_text="Additional information about the project",
                        verbose_name="Observations",
                    ),
                ),
                (
                    "expected_delivery_date",
                    models.DateField(
                        default=projects.models.project.Project.get_default_delivery_date,
                        help_text="Expected date for project delivery",
                        verbose_name="Expected Delivery Date",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="created at",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="Last Updated"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="User who created this project",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "incorporation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Incorporação ao qual este projeto pertence",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="projects.incorporation",
                        verbose_name="Incorporação",
                    ),
                ),
                (
                    "model_project",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Modelo/template utilizado para este projeto",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="projects.modelproject",
                        verbose_name="Modelo de Projeto",
                    ),
                ),
                (
                    "production_cell",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Production cell responsible for this project",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="projects.productioncell",
                        verbose_name="Production Cell",
                    ),
                ),
                (
                    "status_project",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Status atual do projeto",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="projects.projectstatus",
                        verbose_name="Status of the Project",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Projects 360° View",
                "verbose_name_plural": "historical Projects 360° Views",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]

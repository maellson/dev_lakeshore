"""
Django settings for erp_lakeshore project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import sys
import os
from pathlib import Path
from decouple import config
from datetime import timedelta
import dotenv
import socket


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Linha importante para encontrar os apps
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Carregue as vari√°veis do arquivo .env
dotenv.load_dotenv(os.path.join(BASE_DIR, 'docker', '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-(q5sz@&_8)cj8+cmv%&1(38shr!r3n*moz*@2q54$_8e&h%9p&"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


# Para desenvolvimento/teste - permitir qualquer host
ALLOWED_HOSTS = config(
    'ALLOWED_HOSTS', default='localhost,127.0.0.1,api.lakeshoredevelopmentfl.com,erp-lakeshore-alb-842248284.us-east-2.elb.amazonaws.com').split(',')

BROKERMINT_API_KEY = config('BROKERMINT_API_KEY', default='')


# Em desenvolvimento, adicionar ngrok dinamicamente se necess√°rio
if DEBUG:
    ngrok_host = config('NGROK_HOST', default='')
    if ngrok_host and ngrok_host not in ALLOWED_HOSTS:
        ALLOWED_HOSTS.append(ngrok_host)

# Print apenas uma vez durante a inicializa√ß√£o (evita duplica√ß√£o)
if 'runserver' in sys.argv:
    print(f"üîß ALLOWED_HOSTS: {ALLOWED_HOSTS}")

# OU mais espec√≠fico
# ALLOWED_HOSTS = ['localhost', '127.0.0.1', '3.139.88.173']

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "simple_history",


    # Third party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'corsheaders',
    'django_filters',
    'phonenumber_field',
    'drf_yasg',  # Swagger/OpenAPI


    # Adicionar seus apps
    'core',  # app core
    'account',  # app account
    'client_portal',  # app client_portal
    'financial',    # app financial
    'notifications',  # app notifications
    'projects',     # app projects
    'purchases',    # app purchases
    'tasks',        # app tasks
    'leads',        # app leads
    'contracts',    # app contracts
    'integrations',  # app integrations


]

APPEND_SLASH = True
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    # "core.middleware.DisableCSRFForAPIMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Aten√ß√£o tive a necessidade de adicionar o middleware abaixo para remover o trailing slash
    # Middleware para remover o trailing slash
    'core.middleware.TrailingSlashMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
]

# Modelo de usu√°rio customizado
AUTH_USER_MODEL = 'account.CustomUser'

# Configura√ß√µes do Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,

    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
}

# Configura√ß√µes do Swagger/OpenAPI
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'description': 'JWT token. Use formato: Bearer <seu_access_token>'
        }
    },


    # FOR√áAR HTTPS
    # 'DEFAULT_API_URL': 'https://api.lakeshoredevelopmentfl.com',
    # 'PROTOCOL': 'https',


    # comentar as 3 linhas abaixo caso queira deixar publico
    # 'USE_SESSION_AUTH': True,
    # 'LOGIN_URL': '/admin/login/',
    # 'LOGOUT_URL': '/admin/logout/',

    # default para publico ou privado
    'JSON_EDITOR': True,
    'PERSIST_AUTH': True,
    # 'REFETCH_SCHEMA_WITH_AUTH': True,#comenta para deixar publico
    # 'REFETCH_SCHEMA_ON_LOGOUT': True,  # Comente para deixar publico
    'DOC_EXPANSION': 'none',  # ‚Üê Bonus: UI mais limpa
    'DEEP_LINKING': True,     # ‚Üê Bonus: Links diretos

    # ‚úÖ ORGANIZA√á√ÉO POR TAGS
    'TAGS_SORTER': 'alpha',  # Ordenar alfabeticamente
    'OPERATIONS_SORTER': 'alpha',  # Ordenar opera√ß√µes
    'DEFAULT_MODEL_RENDERING': 'model',
    # configuracaoes para download do swagger
    'SHOW_REQUEST_HEADERS': True,
    'SHOW_COMMON_EXTENSIONS': True,
    'USE_SESSION_AUTH': False,  # Para facilitar acesso p√∫blico ao schema

    # ‚úÖ ADICIONAR INFORMA√á√ïES DE DOWNLOAD
    'DISPLAY_OPERATION_ID': False,
    'FILTER': True,  # Habilita filtro na UI


}

# Configura√ß√µes do JWT
SIMPLE_JWT = {

    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

# Configura√ß√µes de CORS
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React dev server
    "http://127.0.0.1:3000",
    "http://177.152.66.181:3000",
    "https://e29995eb21b2.ngrok-free.app",
    'https://app.lakeshoredevelopmentfl.com',
    "https://erp-lakeshore-alb-842248284.us-east-2.elb.amazonaws.com",
    'https://ls-web-phi.vercel.app',
    'https://app.dev.lakeshoredevelopmentfl.com'
]

CSRF_TRUSTED_ORIGINS = [
    'https://api.lakeshoredevelopmentfl.com',
    "https://erp-lakeshore-alb-842248284.us-east-2.elb.amazonaws.com"
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    'https://ls-web-phi.vercel.app'
]


# Timeout global (ADICIONAR no in√≠cio)
# socket.setdefaulttimeout(120)

CORS_ALLOW_CREDENTIALS = True

# Configura√ß√µes de email SMTP (Google)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('SMTP_HOST', default='smtp.gmail.com')
EMAIL_PORT = config('SMTP_PORT', default=587, cast=int)
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config(
    'SMTP_USER', default='noreply@lakeshoredevelopmentfl.com')
EMAIL_HOST_PASSWORD = config(
    'SMTP_PASSWORD')
DEFAULT_FROM_EMAIL = config(
    'SMTP_USER', default='noreply@lakeshoredevelopmentfl.com')

FRONTEND_URL = config('FRONTEND_URL', default='http://localhost:3000')

# Configura√ß√µes de arquivos est√°ticos
# STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # ‚Üê Importante!

# WhiteNoise configura√ß√£o (opcional)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


ROOT_URLCONF = "erp_lakeshore.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [Path(__file__).resolve().parent.parent / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                'django.template.context_processors.debug',
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "erp_lakeshore.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


ENVIRONMENT = os.getenv('ENVIRONMENT', 'local')


if ENVIRONMENT == 'local':
    DB = {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('LOCAL_POSTGRES_DB'),
        'USER': os.environ.get('LOCAL_POSTGRES_USER'),
        'PASSWORD': os.environ.get('LOCAL_POSTGRES_PASSWORD'),
        # ou 'postgres' se estiver rodando Django tamb√©m em Docker
        'HOST': os.environ.get('LOCAL_HOST'),
        'PORT': os.environ.get('LOCAL_PG_PORT'),
        'SCHEMA': os.environ.get('LOCAL_SCHEMA')
    }
else:
    DB = {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_DB'),
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        # ou 'postgres' se estiver rodando Django tamb√©m em Docker
        'HOST': os.environ.get('HOST'),
        'PORT': os.environ.get('PG_PORT'),
        'SCHEMA': os.environ.get('SCHEMA')
    }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB['NAME'],
        'USER': DB['USER'],
        'PASSWORD': DB['PASSWORD'],
        'HOST': DB['HOST'],
        'PORT': DB['PORT'],
        'OPTIONS': {
            'options': f"-c search_path={DB['SCHEMA']}"
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"
# Regi√£o padr√£o (para interpretar n√∫meros sem c√≥digo do pa√≠s)
PHONENUMBER_DEFAULT_REGION = "US"  # ou "BR".

# Formato de armazenamento no banco (SEMPRE E164 para m√°xima compatibilidade)
PHONENUMBER_DB_FORMAT = "E164"

# Formato de exibi√ß√£o padr√£o (pode ser NATIONAL para usu√°rios americanos)
PHONENUMBER_DEFAULT_FORMAT = "NATIONAL"  # Exibe (555) 123-4567 para n√∫meros US
                                        # Exibe +55 83 99988-7766 para n√∫meros BR

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


LANGUAGES = [
    ('en', 'English'),
    ('pt', 'Portugu√™s'),
    ('es', 'Espa√±ol'),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Configura√ß√£o de redirecionamento seguro (opcional)
# SECURE_SSL_REDIRECT = False  # Mantenha False se n√£o estiver usando HTTPS
USE_X_FORWARDED_HOST = True
USE_X_FORWARDED_PORT = True
USE_X_FORWARDED_PROTO = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# Configura√ß√µes do Celery
# erp_lakeshore/settings.py - ADICIONAR
# Configura√ß√µes Celery
CELERY_BROKER_URL = config('REDIS_URL', default='redis://localhost:6379/0')
CELERY_RESULT_BACKEND = config('REDIS_URL', default='redis://localhost:6379/0')

CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TIMEZONE = 'UTC'

# Configura√ß√µes de performance
CELERY_WORKER_PREFETCH_MULTIPLIER = 1
CELERY_TASK_ACKS_LATE = True
CELERY_WORKER_DISABLE_RATE_LIMITS = False

# Configurar logging Celery
CELERY_WORKER_HIJACK_ROOT_LOGGER = False
CELERY_WORKER_LOG_FORMAT = '[%(asctime)s: %(levelname)s/%(processName)s] %(message)s'
